[{"D:\\Web Apps\\dApps\\Tranfer_funds\\src\\index.js":"1","D:\\Web Apps\\dApps\\Tranfer_funds\\src\\reportWebVitals.js":"2","D:\\Web Apps\\dApps\\Tranfer_funds\\src\\App.js":"3","D:\\Web Apps\\dApps\\Tranfer_funds\\src\\BankApp.js":"4","D:\\Web Apps\\dApps\\Tranfer_funds\\src\\Interactions.js":"5","D:\\Web Apps\\dApps\\Tranfer_funds\\src\\Contracts\\doof_app.js":"6"},{"size":517,"mtime":1678704895835,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1678704895837,"results":"9","hashOfConfig":"8"},{"size":208,"mtime":1678704895795,"results":"10","hashOfConfig":"8"},{"size":5657,"mtime":1678733314529,"results":"11","hashOfConfig":"8"},{"size":1039,"mtime":1678704895834,"results":"12","hashOfConfig":"8"},{"size":1409,"mtime":1678732281551,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"a8yix6",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Apps\\dApps\\Tranfer_funds\\src\\index.js",[],["29","30"],"D:\\Web Apps\\dApps\\Tranfer_funds\\src\\reportWebVitals.js",[],"D:\\Web Apps\\dApps\\Tranfer_funds\\src\\App.js",["31"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport BankApp from './BankApp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BankApp/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Web Apps\\dApps\\Tranfer_funds\\src\\BankApp.js",["32","33","34","35","36"],"\r\n\r\nimport { React, useState, useEffect } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport styles from './Bank.module.css'\r\nimport { bank_app_abi, bank_app_contract } from './Contracts/doof_app'\r\n\r\n\r\nconst BankApp = () => {\r\n\r\n\t// deploy simple token contract and paste deployed contract address here. This value is local ganache chain\r\n\tlet contractAddress = bank_app_contract;\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n\tconst [provider, setProvider] = useState(null);\r\n\tconst [signer, setSigner] = useState(null);\r\n\tconst [contract, setContract] = useState(null);\r\n\r\n\tconst [transferHash, setTransferHash] = useState(null);\r\n\tconst [checkAcc, setCheckAcc] = useState(\"false\");\r\n\tconst [accStatus, setAccStatus] = useState(\"\");\r\n\tconst [accbalance, setAccBalance] = useState(\"\");\r\n\r\n\tconst connectWalletHandler = async () => {\r\n\t\ttry {\r\n\t\t\tif (window.ethereum && window.ethereum.isMetaMask) {\r\n\t\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts' })\r\n\t\t\t\t\t.then(result => {\r\n\t\t\t\t\t\taccountChangedHandler(result[0]);\r\n\t\t\t\t\t\tsetConnButtonText('Wallet Connected');\r\n\t\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tsetErrorMessage(error.message);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Need to install MetaMask');\r\n\t\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetErrorMessage(error.message);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// update account, will cause component re-render\r\n\tconst accountChangedHandler = (newAccount) => {\r\n\t\tsetDefaultAccount(newAccount);\r\n\t\tupdateEthers();\r\n\t}\r\n\tconst chainChangedHandler = () => {\r\n\t\t// reload the page to avoid any errors with chain change mid use of application\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\t// Existing code goes here\r\n\r\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\r\n\r\n\tconst updateEthers = () => {\r\n\t\ttry {\r\n\t\t\tif (window.ethereum && window.ethereum.isMetaMask && ethers.providers) {\r\n\t\t\t\tlet tempProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n\t\t\t\tsetProvider(tempProvider);\r\n\r\n\t\t\t\tlet tempSigner = tempProvider.getSigner();\r\n\t\t\t\tsetSigner(tempSigner);\r\n\r\n\t\t\t\tlet tempContract = new ethers.Contract(contractAddress, bank_app_abi, tempSigner);\r\n\t\t\t\tsetContract(tempContract);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst createAccount = async () => {\r\n\t\tlet txt = await contract.createDoof();\r\n\t\tconsole.log(txt.data.data.message);\r\n\t\tsetAccStatus(\"Your Account is created\");\r\n\t}\r\n\r\n\tconst checkAccountExists = async () => {\r\n\t\t///e.preventDefault();\r\n\t\tlet txt = await contract.doofExists();\r\n\t\tif (txt == true) {\r\n\t\t\tsetCheckAcc(\"true\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst AccountBalance = async () => {\r\n\t\tlet txt = await contract.accountBalance();\r\n\t\tlet balanceNumber = txt.toNumber();\r\n\t\t//let tokenDecimals = await contract.decimals();\r\n\t\tconsole.log(balanceNumber)\r\n\t\tsetAccBalance('' + balanceNumber);\r\n\t}\r\n\r\n\tconst EarnDoofs = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet txt = await contract.earn();\r\n\t}\r\n\r\n\tconst transferHandler = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet transferAmount = e.target.sendAmount.value;\r\n\t\tlet recieverAddress = e.target.recieverAddress.value;\r\n\t\tlet txt = await contract.transferDoofs(recieverAddress, transferAmount);\r\n\t\tsetTransferHash(\"Transfer confirmation hash: \" + txt.hash);\r\n\t}\r\n\r\n\tconst WithdrawBalance = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet withdrawAmount = e.target.withdrawAmount.value;\r\n\t\tlet txt = await contract.withdraw(withdrawAmount);\r\n\t\tconsole.log(txt);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<h2> Doof Coins </h2>\r\n\t\t\t<button className={styles.button6} onClick={connectWalletHandler}>{connButtonText}</button>\r\n\r\n\t\t\t{defaultAccount && contract && provider && (<div>\r\n\t\t\t\t<div className={styles.walletCard}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>Address: {defaultAccount}</h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button onClick={AccountBalance}>Check Balance</button> <h3>Doofcoins in the Bank: {accbalance} </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{errorMessage}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.interactionsCard}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\r\n\t\t\t\t\t\t<button onClick={createAccount}>CreateAccount</button>\r\n\t\t\t\t\t\t<h4>Click here to check if your account Exists or not</h4>\r\n\t\t\t\t\t\t<button onClick={checkAccountExists}>CheckAccountExists</button>\r\n\t\t\t\t\t\t<h4>Your Account Status</h4> <h5> {checkAcc}</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<form onSubmit={transferHandler}>\r\n\t\t\t\t\t\t<h3> Transfer money </h3>\r\n\t\t\t\t\t\t<p> Reciever Address </p>\r\n\t\t\t\t\t\t<input type='text' id='recieverAddress' className={styles.addressInput} />\r\n\r\n\t\t\t\t\t\t<p> Transfer Amount </p>\r\n\t\t\t\t\t\t<input type='number' id='sendAmount' min='0' step='1' />\r\n\r\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Transfer</button>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{transferHash}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<form onSubmit={EarnDoofs}>\r\n\t\t\t\t\t\t<h3> Airdrop Doofcoins</h3>\r\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Deposit</button>\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<form onSubmit={WithdrawBalance}>\r\n\t\t\t\t\t\t<h3> Withdraw Money </h3>\r\n\t\t\t\t\t\t<p>Withdraw Amount </p>\r\n\t\t\t\t\t\t<input type='number' id='withdrawAmount' min='0' step='1' />\r\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Withdraw</button>\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>)}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BankApp;","D:\\Web Apps\\dApps\\Tranfer_funds\\src\\Interactions.js",[],"D:\\Web Apps\\dApps\\Tranfer_funds\\src\\Contracts\\doof_app.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":3,"column":27,"nodeType":"43","messageId":"44","endLine":3,"endColumn":36},{"ruleId":"41","severity":1,"message":"46","line":19,"column":9,"nodeType":"43","messageId":"44","endLine":19,"endColumn":15},{"ruleId":"41","severity":1,"message":"47","line":24,"column":9,"nodeType":"43","messageId":"44","endLine":24,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":97,"column":11,"nodeType":"50","messageId":"51","endLine":97,"endColumn":13},{"ruleId":"41","severity":1,"message":"52","line":112,"column":7,"nodeType":"43","messageId":"44","endLine":112,"endColumn":10},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'signer' is assigned a value but never used.","'accStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'txt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]